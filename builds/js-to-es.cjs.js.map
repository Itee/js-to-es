{"version":3,"file":"js-to-es.cjs.js","sources":["../sources/utils.js","../sources/js-to-es.js"],"sourcesContent":["/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nimport {\r\n    existsSync,\r\n    readFileSync,\r\n    mkdirSync\r\n} from 'fs'\r\nimport {\r\n    sep,\r\n    join\r\n} from 'path'\r\n\r\n////////////////////////// CONDITIONAL UTILS /////////////////////////////\r\n\r\n/**\r\n * Check if the parameter is of type string\r\n *\r\n * @param {any} value - The value to check the string type\r\n * @return {boolean}\r\n */\r\nexport function isString ( value ) {\r\n\r\n    return ( typeof value === 'string' )\r\n\r\n}\r\n\r\n/**\r\n * Check if the parameter is NOT of type string\r\n *\r\n * @param {any} value - The value to check the non string type\r\n * @return {boolean}\r\n */\r\nexport function isNotString ( value ) {\r\n\r\n    return ( !isString( value ) )\r\n\r\n}\r\n\r\n/**\r\n * Check if the parameter is an array of string.\r\n * Note: An array of empty string will return true.\r\n *\r\n * @param {any} values - The value to check if it is an array of string\r\n * @return {boolean} - True if array of string, false otherwise\r\n */\r\nexport function isArrayOfString ( values ) {\r\n\r\n    if ( !Array.isArray( values ) ) { return false }\r\n\r\n    for ( let index = 0, numberOfValues = values.length ; index < numberOfValues ; index++ ) {\r\n\r\n        if ( isNotString( values[ index ] ) ) { return false }\r\n\r\n    }\r\n\r\n    return true\r\n\r\n}\r\n\r\n///////////////////////// FILES UTILS //////////////////////////////\r\n\r\nexport function fileExistForPath ( value ) {\r\n\r\n    return existsSync( value )\r\n\r\n}\r\n\r\nexport function fileNotExistForPath ( value ) {\r\n\r\n    return !fileExistForPath( value )\r\n\r\n}\r\n\r\nexport function getFileForPath ( value ) {\r\n\r\n    // In case files doesn't exist\r\n    if ( fileNotExistForPath( value ) ) {\r\n        throw new Error( `Invalid file path \"${value}\" file does not exist !` )\r\n    }\r\n\r\n    return readFileSync( value, 'utf8' )\r\n\r\n}\r\n\r\nexport function getUncommentedFileForPath ( value ) {\r\n\r\n    return getFileForPath( value ).replace( /\\/\\*[\\s\\S]*?\\*\\/|([^\\\\:]|^)\\/\\/.*$/g, '$1' )\r\n\r\n}\r\n\r\nexport function createFoldersTree ( value ) {\r\n\r\n    value.split( sep )\r\n         .reduce( ( parentDir, childDir ) => {\r\n\r\n             const curDir = join( parentDir, childDir )\r\n\r\n             if ( fileNotExistForPath( curDir ) ) {\r\n                 mkdirSync( curDir )\r\n             }\r\n\r\n             return curDir\r\n\r\n         } )\r\n\r\n}\r\n\r\n///////////////////////// COMMON UTILS //////////////////////////////\r\n\r\nexport function makeUnique ( value, index, array ) {\r\n\r\n    return array.indexOf( value ) === index\r\n\r\n}\r\n","/**\r\n * @file The threejs convertor\r\n *\r\n * @author Itee <valcketristan@gmail.com>\r\n * @license MIT\r\n */\r\n\r\nimport {\r\n    readdirSync,\r\n    statSync,\r\n    writeFileSync\r\n} from 'fs'\r\nimport {\r\n    sep,\r\n    extname,\r\n    basename,\r\n    dirname,\r\n    relative,\r\n    resolve,\r\n    join\r\n} from 'path'\r\nimport {\r\n    isString,\r\n    isNotString,\r\n    isArrayOfString,\r\n    fileNotExistForPath,\r\n    getUncommentedFileForPath,\r\n    createFoldersTree,\r\n    makeUnique\r\n} from './utils'\r\n\r\n/**\r\n * Extend the String prototype if contains not exist.\r\n * It allow to check if the string contains or not a target string\r\n *\r\n * @type {Function}\r\n * @param {string} target - The string to match in current string\r\n * @return {boolean}\r\n */\r\nString.prototype.contains = String.prototype.contains || function ( target ) { return this.indexOf( target ) > -1 }\r\n\r\nclass JsToEs {\r\n\r\n    static JavascriptType = Object.freeze( {\r\n        AMD:       'AMD',\r\n        CJS:       'CJS',\r\n        Classic:   'Classic',\r\n        Es6:       'Es6',\r\n        Library:   'Library',\r\n        Prototype: 'Prototype',\r\n        UMD:       'UMD',\r\n        Unknown:   'Unknown'\r\n    } )\r\n\r\n    constructor ( options = {} ) {\r\n\r\n        // Public\r\n        this.inputs    = options.inputs || [ '' ]\r\n        this.excludes  = options.excludes || [ '' ]\r\n        this.output    = options.output || ''\r\n        this.edgeCases = options.edgeCases || []\r\n        this.banner    = options.banner || ''\r\n        this.global    = options.global || ''\r\n\r\n        // Private\r\n        this._exportMap = {}\r\n        this._fileMap   = {}\r\n        this._regex     = {\r\n            'AMD':       new RegExp( /define\\.amd/g ),\r\n            'CJS':       new RegExp( /module\\.exports\\s*=\\s*\\{?[^}]*}?/g ),\r\n            'UMD':       new RegExp( /\\(function\\s*\\(root,\\s*factory\\)\\s*\\{/g ),\r\n            'Classic':   new RegExp( `(${this._global}.(\\\\w+)\\\\s*=\\\\s*)+\\\\s*function`, 'g' ),\r\n            'Prototype': new RegExp( `prototype\\\\.constructor\\\\s?=\\\\s?(${this._global}\\\\.)?(\\\\w)+`, 'g' ),\r\n            'Library':   new RegExp( `${this._global}.(\\\\w+) = \\\\{` ),\r\n            'Es6':       new RegExp( /(export\\s(default|var))|((import|export)[\\r\\n\\s]*(default)?({[\\w\\s,]+}\\s?(from)?))/, 'g' )\r\n        }\r\n\r\n    }\r\n\r\n    get inputs () {\r\n        return this._inputs\r\n    }\r\n\r\n    set inputs ( value ) {\r\n\r\n        if ( isArrayOfString( value ) ) {\r\n\r\n            this._inputs = value\r\n\r\n        } else if ( isString( value ) ) {\r\n\r\n            this._inputs = [ value ]\r\n\r\n        } else {\r\n\r\n            throw new TypeError( 'Invalid inputs arguments, expected a String or Array of String' )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    get excludes () {\r\n        return this._excludes\r\n    }\r\n\r\n    set excludes ( value ) {\r\n\r\n        if ( isArrayOfString( value ) ) {\r\n\r\n            this._excludes = value\r\n\r\n        } else if ( isString( value ) ) {\r\n\r\n            this._excludes = [ value ]\r\n\r\n        } else {\r\n\r\n            throw new TypeError( 'Invalid excludes arguments, expected a String or Array of String' )\r\n\r\n        }\r\n\r\n        return this\r\n\r\n    }\r\n\r\n    get output () {\r\n        return this._output\r\n    }\r\n\r\n    set output ( value ) {\r\n\r\n        if ( isString( value ) ) {\r\n\r\n            this._output = value\r\n\r\n        } else {\r\n\r\n            throw new TypeError( 'Invalid output arguments, expected a String' )\r\n\r\n        }\r\n\r\n        return this\r\n\r\n    }\r\n\r\n    get edgeCases () {\r\n        return this._edgeCases\r\n    }\r\n\r\n    set edgeCases ( value ) {\r\n\r\n        // Todo: object edge case or validate object structure of input value here !\r\n        this._edgeCases = value\r\n\r\n    }\r\n\r\n    get banner () {\r\n        return this._banner\r\n    }\r\n\r\n    set banner ( value ) {\r\n\r\n        if ( isNotString( value ) ) { throw new TypeError( 'Invalid banner argument, expect a string.' )}\r\n\r\n        this._banner = value\r\n    }\r\n\r\n    get global () {\r\n        return this._banner\r\n    }\r\n\r\n    set global ( value ) {\r\n\r\n        if ( isNotString( value ) ) { throw new TypeError( 'Invalid global argument, expect a string.' )}\r\n\r\n        // global will be used in regex so escape it\r\n        // https://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\r\n        this._global = value.replace( /[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&' )\r\n        this._regex  = {\r\n            'AMD':       new RegExp( /define\\.amd/g ),\r\n            'CJS':       new RegExp( /module\\.exports\\s*=\\s*\\{?[^}]*}?/g ),\r\n            'UMD':       new RegExp( /\\(function\\s*\\(root,\\s*factory\\)\\s*\\{/g ),\r\n            'Classic':   new RegExp( `(${this._global}.(\\\\w+)\\\\s*=\\\\s*)+\\\\s*function`, 'g' ),\r\n            'Prototype': new RegExp( `prototype\\\\.constructor\\\\s?=\\\\s?(${this._global}\\\\.)?(\\\\w)+`, 'g' ),\r\n            'Library':   new RegExp( `${this._global}.(\\\\w+) = \\\\{` ),\r\n            'Es6':       new RegExp( /(export\\s(default|var))|((import|export)[\\r\\n\\s]*(default)?({[\\w\\s,]+}\\s?(from)?))/, 'g' )\r\n        }\r\n\r\n    }\r\n\r\n    get exportMap () {\r\n        return this._exportMap\r\n    }\r\n\r\n    get fileMap () {\r\n        return this._fileMap\r\n    }\r\n\r\n    /**\r\n     * Return all the files paths under filePaths in a recursive way.\r\n     *\r\n     * @param filePaths - An array of string, representing the base path where looking for get all files paths\r\n     * @return {Array.<string>} - An array of files paths\r\n     * @private\r\n     */\r\n    static _getFilesPathsUnder ( filePaths ) {\r\n\r\n        let files = []\r\n\r\n        if ( Array.isArray( filePaths ) ) {\r\n\r\n            let filePath = undefined\r\n            for ( let pathIndex = 0, numberOfPaths = filePaths.length ; pathIndex < numberOfPaths ; pathIndex++ ) {\r\n\r\n                filePath      = filePaths[ pathIndex ]\r\n                const results = JsToEs._checkStateOf( filePath )\r\n                Array.prototype.push.apply( files, results )\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            const results = JsToEs._checkStateOf( filePaths )\r\n            Array.prototype.push.apply( files, results )\r\n\r\n        }\r\n\r\n        return files\r\n\r\n    }\r\n\r\n    static _getFilesPathsUnderFolder ( folder ) {\r\n\r\n        const files = []\r\n\r\n        readdirSync( folder ).forEach( ( name ) => {\r\n\r\n            const filePath = resolve( folder, name )\r\n            const results  = JsToEs._checkStateOf( filePath )\r\n            Array.prototype.push.apply( files, results )\r\n\r\n        } )\r\n\r\n        return files\r\n\r\n    }\r\n\r\n    static _checkStateOf ( filePath ) {\r\n\r\n        if ( fileNotExistForPath( filePath ) ) {\r\n            throw new ReferenceError( `Invalid file path \"${filePath}\".` )\r\n        }\r\n\r\n        const stats = statSync( filePath )\r\n        if ( stats.isFile() ) {\r\n\r\n            return [ filePath ]\r\n\r\n        } else if ( stats.isDirectory() ) {\r\n\r\n            return JsToEs._getFilesPathsUnderFolder( filePath )\r\n\r\n        } else {\r\n\r\n            throw new ReferenceError( `Invalid stats file object.` )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Will filter file paths an keep only js files\r\n     *\r\n     * @param {Array.<string>} filePaths - An array of path to filter\r\n     * @return {Array.<string>} The filtered path with only javascript files\r\n     * @private\r\n     */\r\n    static _filterJavascriptFiles ( filePaths ) {\r\n\r\n        let filteredFilesPath = []\r\n\r\n        let filePath = undefined\r\n        for ( let filePathIndex = 0, numberOfFilePaths = filePaths.length ; filePathIndex < numberOfFilePaths ; filePathIndex++ ) {\r\n\r\n            filePath = filePaths[ filePathIndex ]\r\n\r\n            // Not a js file like fonts or shaders\r\n            const fileExtension = extname( filePath )\r\n            if ( fileExtension !== '.js' ) {\r\n                //            console.log( 'Not Js:  ' + filePath )\r\n                continue\r\n            }\r\n\r\n            filteredFilesPath.push( filePath )\r\n\r\n        }\r\n\r\n        return filteredFilesPath\r\n\r\n    }\r\n\r\n    /**\r\n     * Will create an array without the strings in filePaths that are matched in excludes paths\r\n     *\r\n     * @param {Array.<string>} filePaths - An array of string to clean\r\n     * @param {Array.<string>} excludes - The paths to remove\r\n     * @return {Array.<string>} The cleaned filePaths of excludes paths\r\n     * @private\r\n     */\r\n    static _excludesFilesPaths ( filePaths, excludes ) {\r\n\r\n        let filteredFilesPath = []\r\n\r\n        let filePath = undefined\r\n        for ( let filePathIndex = 0, numberOfFilePaths = filePaths.length ; filePathIndex < numberOfFilePaths ; filePathIndex++ ) {\r\n            filePath = filePaths[ filePathIndex ]\r\n\r\n            if ( JsToEs._isExclude( filePath, excludes ) ) {\r\n                //            console.log( 'Exclude: ' + filePath )\r\n                continue\r\n            }\r\n\r\n            filteredFilesPath.push( filePath )\r\n\r\n        }\r\n\r\n        return filteredFilesPath\r\n\r\n    }\r\n\r\n    static _isExclude ( path, excludes ) {\r\n\r\n        let isExclude      = false\r\n        let excludePattern = undefined\r\n        for ( let i = 0, pathLength = excludes.length ; i < pathLength ; i++ ) {\r\n\r\n            excludePattern = excludes[ i ]\r\n\r\n            if ( excludePattern.length === 0 ) {\r\n                continue\r\n            }\r\n\r\n            // In case this is a file name it must fully match\r\n            if ( excludePattern.indexOf( '.' ) > -1 ) {\r\n\r\n                const fileName = path.replace( /^.*(\\\\|\\/|\\:)/, '' )\r\n                if ( fileName === excludePattern ) {\r\n                    isExclude = true\r\n                }\r\n\r\n            } else if ( path.contains( excludePattern ) ) {\r\n                isExclude = true\r\n            }\r\n\r\n        }\r\n\r\n        return isExclude\r\n\r\n    }\r\n\r\n    static _getFileType ( file, regex ) {\r\n\r\n        const es6Match = file.match( regex[ JsToEs.JavascriptType.Es6 ] )\r\n        if ( es6Match && es6Match.length > 0 ) {\r\n            return JsToEs.JavascriptType.Es6\r\n        }\r\n\r\n        const amdMatch = file.match( regex[ JsToEs.JavascriptType.AMD ] )\r\n        if ( amdMatch && amdMatch.length > 0 ) {\r\n            return JsToEs.JavascriptType.AMD\r\n        }\r\n\r\n        const cjsMatch = file.match( regex[ JsToEs.JavascriptType.CJS ] )\r\n        if ( cjsMatch && cjsMatch.length > 0 ) {\r\n            return JsToEs.JavascriptType.CJS\r\n        }\r\n\r\n        const classicObjectMatch = file.match( regex[ JsToEs.JavascriptType.Classic ] )\r\n        if ( classicObjectMatch && classicObjectMatch.length > 0 ) {\r\n            return JsToEs.JavascriptType.Classic\r\n        }\r\n\r\n        const prototypedObjectMatch = file.match( regex[ JsToEs.JavascriptType.Prototype ] )\r\n        if ( prototypedObjectMatch && prototypedObjectMatch.length > 0 ) {\r\n            return JsToEs.JavascriptType.Prototype\r\n        }\r\n\r\n        const libMatch = file.match( regex[ JsToEs.JavascriptType.Library ] )\r\n        if ( libMatch && libMatch.length > 0 ) {\r\n            return JsToEs.JavascriptType.Library\r\n        }\r\n\r\n        return JsToEs.JavascriptType.Unknown\r\n\r\n    }\r\n\r\n    static _convertFile ( banner, fileDatas, exportMap ) {\r\n\r\n        const outputPath = fileDatas.output\r\n        const outputDir  = dirname( outputPath )\r\n\r\n        const formatedImports = JsToEs._formatImportStatements( outputPath, exportMap, fileDatas.imports )\r\n        const formatedFile    = JsToEs._formatReplacementStatements( fileDatas.file, fileDatas.replacements )\r\n        const formatedExports = JsToEs._formatExportStatements( outputPath, fileDatas.exports )\r\n        const outputFile      = banner + formatedImports + formatedFile + formatedExports\r\n\r\n        createFoldersTree( outputDir )\r\n        writeFileSync( outputPath, outputFile )\r\n\r\n    }\r\n\r\n    static _copyFile ( banner, fileDatas ) {\r\n\r\n        const outputPath = fileDatas.output\r\n        const outputDir  = dirname( outputPath )\r\n        const file       = banner + fileDatas.file\r\n\r\n        createFoldersTree( outputDir )\r\n        writeFileSync( outputPath, file )\r\n\r\n    }\r\n\r\n    static _getAllImportsStatementIn ( global, file, exports ) {\r\n\r\n        let statements = []\r\n\r\n        const matchs = file.match( /import\\s+(?:(?:({[\\w\\s,]+})|([\\w,*-]+))\\s+)+from/g ) || []\r\n        matchs.filter( makeUnique )\r\n              .forEach( ( value ) => {\r\n\r\n                  const results = value.replace( 'import', '' )\r\n                                       .replace( 'from', '' )\r\n                                       .replace( /[{}]/g, '' )\r\n                                       .replace( /\\s+/g, '' )\r\n                                       .split( ',' )\r\n\r\n                  // Check if the extends statement is not about the exported object !\r\n                  let result = undefined\r\n                  for ( let i = results.length - 1 ; i >= 0 ; --i ) {\r\n                      result = results[ i ]\r\n\r\n                      // Check if import matching does no concerne inner class\r\n                      if ( exports.includes( result ) ) {\r\n                          return\r\n                      }\r\n\r\n                      if ( !result ) {\r\n                          results.splice( i, 1 )\r\n                      }\r\n\r\n                  }\r\n\r\n                  if ( results.length > 0 ) {\r\n                      Array.prototype.push.apply( statements, results )\r\n                  }\r\n\r\n              } )\r\n\r\n        return statements\r\n\r\n    }\r\n\r\n    static _getAllExtendsStatementIn ( global, file, exports ) {\r\n\r\n        let statements = []\r\n\r\n        // By Object.assign\r\n        const fileRegex   = new RegExp( `Object\\\\.assign\\\\(\\\\s*((${global}.)?(\\\\w+)\\\\.prototype[,]*\\\\s*){2,}`, 'g' )\r\n        const globalRegex = new RegExp( `${global}\\\\.`, 'g' )\r\n\r\n        const matchs = file.match( fileRegex ) || []\r\n        matchs.filter( makeUnique )\r\n              .forEach( ( value ) => {\r\n\r\n                  const results = value.replace( /Object\\.assign\\(\\s+/g, '' )\r\n                                       .replace( globalRegex, '' )\r\n                                       .replace( /\\.prototype/g, '' )\r\n                                       .replace( /\\s+/g, '' )\r\n                                       .split( ',' )\r\n\r\n                  // Check if the extends statement is not about the exported object !\r\n                  let result = undefined\r\n                  for ( let i = results.length - 1 ; i >= 0 ; --i ) {\r\n                      result = results[ i ]\r\n\r\n                      // Check if import matching does no concerne inner class\r\n                      if ( !result || exports.includes( result ) ) {\r\n                          results.splice( i, 1 )\r\n                      }\r\n\r\n                  }\r\n\r\n                  if ( results.length > 0 ) {\r\n                      Array.prototype.push.apply( statements, results )\r\n                  }\r\n\r\n              } )\r\n\r\n        return statements\r\n\r\n    }\r\n\r\n    static _getAllInheritStatementsIn ( global, file, exports ) {\r\n\r\n        let statements = []\r\n\r\n        const fileRegex   = new RegExp( `Object\\\\.create\\\\(\\\\s+((${global}.)?(\\\\w+)\\\\.prototype[,]?\\\\s*)+\\\\)`, 'g' )\r\n        const globalRegex = new RegExp( `Object\\\\.create\\\\(\\\\s+(${global}.)?`, 'g' )\r\n\r\n        const matchs = file.match( fileRegex ) || []\r\n        matchs.filter( makeUnique )\r\n              .forEach( ( value ) => {\r\n\r\n                  const results = value.replace( globalRegex, '' )\r\n                                       .replace( /\\.prototype/g, '' )\r\n                                       .replace( /\\)/g, '' )\r\n                                       .replace( /\\s+/g, '' )\r\n                                       .split( ',' )\r\n\r\n                  // Check if the inherit statement is not about the exported object !\r\n                  let result = undefined\r\n                  for ( let i = 0, resultLength = results.length ; i < resultLength ; i++ ) {\r\n                      result = results[ i ]\r\n\r\n                      if ( !result || exports.includes( result ) ) {\r\n                          results.splice( i, 1 )\r\n                      }\r\n\r\n                  }\r\n\r\n                  if ( results.length > 0 ) {\r\n                      Array.prototype.push.apply( statements, results )\r\n                  }\r\n\r\n              } )\r\n\r\n        return statements\r\n\r\n    }\r\n\r\n    static _getAllNewStatementIn ( global, file, exports ) {\r\n\r\n        let statements = []\r\n\r\n        const fileRegex   = new RegExp( `new\\\\s${global}.(\\\\w+)\\\\s?`, 'g' )\r\n        const globalRegex = new RegExp( `new\\\\s${global}\\\\.`, 'g' )\r\n\r\n        const matchs = file.match( fileRegex ) || []\r\n        matchs.filter( makeUnique )\r\n              .forEach( ( value ) => {\r\n\r\n                  const result = value.replace( globalRegex, '' )\r\n                                      .replace( /\\s+/g, '' )\r\n\r\n                  // Check if the new statement is not about the exported object !\r\n                  if ( exports.includes( result ) ) {\r\n                      return\r\n                  }\r\n\r\n                  if ( result ) { statements.push( result ) }\r\n\r\n              } )\r\n\r\n        return statements\r\n\r\n    }\r\n\r\n    static _getAllInstanceOfStatementIn ( global, file, exports ) {\r\n\r\n        let statements = []\r\n\r\n        const fileRegex   = new RegExp( `instanceof\\\\s${global}.(\\\\w+)\\\\s?`, 'g' )\r\n        const globalRegex = new RegExp( `instanceof\\\\s${global}\\\\.`, 'g' )\r\n\r\n        const matchs = file.match( fileRegex ) || []\r\n        matchs.filter( makeUnique )\r\n              .forEach( ( value ) => {\r\n\r\n                  const result = value.replace( globalRegex, '' )\r\n                                      .replace( /\\s+/g, '' )\r\n\r\n                  // Check if the new statement is not about the exported object !\r\n                  if ( exports.includes( result ) ) {\r\n                      return\r\n                  }\r\n\r\n                  if ( result ) { statements.push( result ) }\r\n\r\n              } )\r\n\r\n        return statements\r\n\r\n    }\r\n\r\n    static _getImportsFor ( global, file, exports, edgeCase ) {\r\n\r\n        if ( edgeCase.importsOverride ) {\r\n            return edgeCase.importsOverride\r\n        }\r\n\r\n        let imports = []\r\n\r\n        Array.prototype.push.apply( imports, JsToEs._getAllImportsStatementIn( global, file, exports ) )\r\n        Array.prototype.push.apply( imports, JsToEs._getAllInheritStatementsIn( global, file, exports ) )\r\n        Array.prototype.push.apply( imports, JsToEs._getAllExtendsStatementIn( global, file, exports ) )\r\n        Array.prototype.push.apply( imports, JsToEs._getAllNewStatementIn( global, file, exports ) )\r\n        Array.prototype.push.apply( imports, JsToEs._getAllInstanceOfStatementIn( global, file, exports ) )\r\n\r\n        if ( edgeCase.imports ) {\r\n            Array.prototype.push.apply( imports, edgeCase.imports )\r\n        }\r\n\r\n        // A class can be inherited and dynamicaly create by new in the same file so we need to check uniqueness\r\n        return imports.filter( makeUnique )\r\n\r\n    }\r\n\r\n    static _formatImportStatements ( importerFilePath, exportMap, objectNames ) {\r\n\r\n        let importStatements = []\r\n        let importsMap       = {}\r\n\r\n        objectNames.forEach( ( objectName ) => {\r\n\r\n            if ( Array.isArray( objectName ) ) {\r\n\r\n                importsMap[ objectName[ 2 ] ] = []\r\n                importsMap[ objectName[ 2 ] ].push( objectName[ 0 ] )\r\n\r\n            } else {\r\n\r\n                const exporterFilePath = exportMap[ objectName ]\r\n                if ( !exporterFilePath ) {\r\n                    console.error( `WARNING: Missing export statement for: ${objectName} in ${importerFilePath} this is an edge case that will probably need to be managed manually !!!` )\r\n                    return\r\n                }\r\n\r\n                // Compute relative path from importer to exporter\r\n                const importerDirectoryName      = dirname( importerFilePath )\r\n                const exporterDirectoryName      = dirname( exporterFilePath )\r\n                const exporterBaseName           = basename( exporterFilePath )\r\n                const relativePath               = relative( importerDirectoryName, exporterDirectoryName )\r\n                const firstChar                  = relativePath[ 0 ]\r\n                const notStartWithDot            = (firstChar !== '.')\r\n                const relativeFilePath           = (notStartWithDot) ? './' + join( relativePath, exporterBaseName ) : join( relativePath, exporterBaseName )\r\n                const relativeFilePathNormalized = relativeFilePath.replace( /\\\\/g, '/' )\r\n\r\n                if ( !importsMap[ relativeFilePathNormalized ] ) {\r\n                    importsMap[ relativeFilePathNormalized ] = []\r\n                }\r\n                importsMap[ relativeFilePathNormalized ].push( objectName )\r\n\r\n            }\r\n\r\n        } )\r\n\r\n        for ( let importPath in importsMap ) {\r\n\r\n            let imports = importsMap[ importPath ]\r\n\r\n            let formatedImports = 'import {'\r\n\r\n            if ( imports.length === 1 ) {\r\n\r\n                formatedImports += ` ${imports[ 0 ]} `\r\n\r\n            } else if ( imports.length > 1 ) {\r\n\r\n                formatedImports += '\\n'\r\n\r\n                let importedObject = undefined\r\n                for ( let i = 0, numberOfImports = imports.length ; i < numberOfImports ; i++ ) {\r\n                    importedObject = imports[ i ]\r\n\r\n                    if ( i === numberOfImports - 1 ) {\r\n                        formatedImports += `\\t${importedObject}\\n`\r\n                    } else {\r\n                        formatedImports += `\\t${importedObject},\\n`\r\n                    }\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                console.error( `WARNING: ${basename( importPath )} does not contains imports, fallback to file name export...` )\r\n\r\n            }\r\n            formatedImports += `} from '${importPath}'`\r\n\r\n            importStatements.push( formatedImports )\r\n\r\n        }\r\n\r\n        return importStatements.join( '\\n' ).concat( '\\n\\n' ) // don't forget last feed line\r\n\r\n    }\r\n\r\n    static _getEs6ReplacementsFor ( global ) {\r\n\r\n        let replacements = []\r\n\r\n        replacements.push( [ /import\\s+(?:(?:({[\\w\\s,]+})|([\\w,*-]+))\\s+)+from.+/g, '' ] )\r\n        replacements.push( [ /export var/g, 'var' ] )\r\n        replacements.push( [ /export function/g, 'function' ] )\r\n        replacements.push( [ /export(?:[^s]|)(\\s*{(?:[\\w\\s,])+}\\s*)(?:(?:from)?\\s?['\"][./]+[\\w.]+['\"])?;?/g, '' ] )\r\n\r\n        return replacements\r\n\r\n    }\r\n\r\n    static _getExportsReplacementsFor ( global, exports ) {\r\n\r\n        let replacements = []\r\n\r\n        for ( let i = 0, numberOfExports = exports.length ; i < numberOfExports ; i++ ) {\r\n\r\n            const exportedObject = exports[ i ]\r\n\r\n            const regex2       = new RegExp( `${global}.${exportedObject} =`, 'g' )\r\n            const replacement2 = `var ${exportedObject} =`\r\n            replacements.push( [ regex2, replacement2 ] )\r\n\r\n            const regex1       = new RegExp( ' = var ', 'g' )\r\n            const replacement1 = ' = '\r\n            replacements.push( [ regex1, replacement1 ] )\r\n\r\n        }\r\n\r\n        return replacements\r\n\r\n    }\r\n\r\n    static _getIifeReplacementsFor ( global, file ) {\r\n\r\n        const unspacedFile = file.replace( /\\s+/g, '' )\r\n        let replacements   = []\r\n\r\n        // Check if this iife is a main englobing function or inner function\r\n        const matchIife = unspacedFile.match( /^\\(\\s*function\\s*\\(\\s*(\\w+)?\\s*\\)\\s*\\{/g ) || []\r\n        if ( matchIife.length > 0 ) {\r\n\r\n            replacements.push( [ /\\(\\s*function\\s*\\(\\s*(\\w+)?\\s*\\)\\s*\\{/, '' ] )\r\n\r\n            // Check for end type with params or not\r\n            const matchParametrizedEndIife = unspacedFile.match( /}\\s*\\)\\s*\\(\\s*[\\w.=\\s]*(\\|\\|\\s*\\{\\})?\\s*\\);?$/ ) || []\r\n            const matchEmptyEndIife        = unspacedFile.match( /}\\s*\\(\\s*[\\w]*\\s*\\)\\s*\\);?$/ ) || []\r\n            if ( matchParametrizedEndIife.length > 0 ) {\r\n\r\n                replacements.push( [ /}\\s*\\)\\s*\\(\\s*[\\w.=\\s]*(\\|\\|\\s*\\{\\})?\\s*\\);?/, '' ] )\r\n\r\n            } else if ( matchEmptyEndIife.length > 0 ) {\r\n\r\n                replacements.push( [ /}\\s*\\(\\s*[\\w]*\\s*\\)\\s*\\);?/, '' ] )\r\n\r\n            } else {\r\n\r\n                throw new Error( 'Unable to match end of IIFE.' )\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return replacements\r\n\r\n    }\r\n\r\n    static _getGlobalReplacementsFor ( global ) {\r\n\r\n        const regex1 = new RegExp( `${global}\\\\.Math\\\\.`, 'g' )\r\n        const regex2 = new RegExp( `${global}\\.`, 'g' )\r\n\r\n        return [\r\n            [ regex1, '_Math.' ],\r\n            [ regex2, '' ]\r\n        ]\r\n\r\n    }\r\n\r\n    static _getAutoAssignementReplacementsFor ( global ) {\r\n\r\n        return [ [ /var\\s?(\\w+)\\s?=\\s?\\1;/g, '' ] ]\r\n\r\n    }\r\n\r\n    static _getReplacementsFor ( global, file, exports, edgeCase ) {\r\n\r\n        if ( edgeCase.replacementsOverride ) {\r\n            return edgeCase.replacementsOverride\r\n        }\r\n\r\n        let replacements = []\r\n\r\n        Array.prototype.push.apply( replacements, JsToEs._getEs6ReplacementsFor( global ) )\r\n        Array.prototype.push.apply( replacements, JsToEs._getExportsReplacementsFor( global, exports ) )\r\n        Array.prototype.push.apply( replacements, JsToEs._getIifeReplacementsFor( global, file ) )\r\n        Array.prototype.push.apply( replacements, JsToEs._getGlobalReplacementsFor( global ) )\r\n        Array.prototype.push.apply( replacements, JsToEs._getAutoAssignementReplacementsFor( global ) )\r\n\r\n        if ( edgeCase.replacements ) {\r\n            Array.prototype.push.apply( replacements, edgeCase.replacements )\r\n        }\r\n\r\n        return replacements\r\n\r\n    }\r\n\r\n    static _formatReplacementStatements ( file, replacements ) {\r\n\r\n        let _file = file\r\n        for ( let replaceIndex = 0, numberOfReplacements = replacements.length ; replaceIndex < numberOfReplacements ; replaceIndex++ ) {\r\n\r\n            const replacement = replacements[ replaceIndex ]\r\n            _file             = _file.replace( replacement[ 0 ], replacement[ 1 ] )\r\n\r\n        }\r\n        return _file\r\n\r\n    }\r\n\r\n    static _getExportsStatementsInES6File ( global, file ) {\r\n\r\n        let exportedElements = []\r\n\r\n        // Todo: May be it should be splitted by export type... direct, named, default, as etc...\r\n        const es6MatchedExports = file.match( /export(?:[^s]|)(?:(?:\\s*{([\\w\\s,]+)}\\s*)(?:(?:from)?\\s?['\"]([./]+[\\w.]+['\"]);?)?|(var\\s+.+))/g )\r\n        if ( es6MatchedExports ) {\r\n\r\n            // Clean\r\n            es6MatchedExports.forEach( ( value ) => {\r\n\r\n                if ( value.contains( 'from' ) ) {\r\n\r\n                    const splitOnFrom = value.split( 'from' )\r\n                    const exports     = splitOnFrom[ 0 ]\r\n                        .replace( /export/g, '' )\r\n                        .replace( /[\\s\\n\\r;{}]+/g, '' )\r\n                    //                    .split( ',' )\r\n\r\n                    const exportFile = splitOnFrom[ 1 ].replace( /[\\s'\";]+/g, '' )\r\n\r\n                    // Todo: allow exports like 'foo, bar, baz' and parse it when create exports statements\r\n                    Array.prototype.push.apply( exportedElements, [ [ exports, 'from', exportFile ] ] )\r\n                    return\r\n\r\n                }\r\n\r\n                if ( value.contains( 'as' ) ) {\r\n\r\n                    value = value.replace( /\\w+\\sas/g, '' )\r\n\r\n                }\r\n\r\n                if ( value.contains( 'var' ) ) {\r\n\r\n                    value = value.replace( /export/g, '' )\r\n                                 .replace( /var/g, '' )\r\n                                 .replace( /\\s*=\\s*.+/g, '' )\r\n\r\n                }\r\n\r\n                if ( value.contains( 'function' ) ) {\r\n\r\n                    value = value.replace( /function/g, '' )\r\n\r\n                }\r\n\r\n                const results = value.replace( /export/g, '' )\r\n                                     .replace( /[\\s\\n\\r;{}]+/g, '' )\r\n                                     .split( ',' )\r\n\r\n                Array.prototype.push.apply( exportedElements, results )\r\n\r\n            } )\r\n\r\n        }\r\n\r\n        return exportedElements\r\n\r\n    }\r\n\r\n    static _getExportsStatementsInAMDFile ( global, file ) {\r\n\r\n        console.error( `WARNING: File is unable to be process... It is an AMD module. Sorry for the disagreement.` )\r\n        return []\r\n\r\n    }\r\n\r\n    static _getExportsStatementsInCJSFile ( global, file ) {\r\n\r\n        let exportedElements = []\r\n\r\n        const fileRegex = new RegExp( /module\\.exports\\s*=\\s*\\{?[^}]*}?/g )\r\n\r\n        const commonjsExports = file.match( fileRegex )\r\n        if ( commonjsExports ) {\r\n\r\n            // Clean\r\n            commonjsExports.forEach( ( value ) => {\r\n\r\n                const results = value.replace( /module\\.exports/g, '' )\r\n                                     .replace( /[\\s\\n\\r;{}=]+/g, '' )\r\n                                     .split( ',' )\r\n\r\n                Array.prototype.push.apply( exportedElements, results )\r\n\r\n            } )\r\n\r\n        }\r\n\r\n        return exportedElements\r\n\r\n    }\r\n\r\n    static _getExportsStatementsInClassicFile ( global, file ) {\r\n\r\n        let exportedElements = []\r\n\r\n        const fileRegex   = new RegExp( `(${global}.(\\\\w+)\\\\s*=\\\\s*)+\\\\s*function`, 'g' )\r\n        const globalRegex = new RegExp( `${global}\\\\.|\\\\s*=\\\\s*function`, 'g' )\r\n\r\n        const potentialClassicObjectExports = file.match( fileRegex )\r\n        if ( potentialClassicObjectExports ) {\r\n\r\n            // Clean\r\n            potentialClassicObjectExports.forEach( ( value ) => {\r\n\r\n                const results = value.replace( globalRegex, '' )\r\n                                     .replace( /\\s*/g, '' )\r\n                                     .split( '=' )\r\n\r\n                Array.prototype.push.apply( exportedElements, results )\r\n\r\n            } )\r\n\r\n        }\r\n\r\n        return exportedElements\r\n\r\n    }\r\n\r\n    static _getExportsStatementsInPrototypedFile ( global, file ) {\r\n\r\n        let exportedElements = []\r\n\r\n        const fileRegex   = new RegExp( `prototype\\\\.constructor\\\\s?=\\\\s?(${global}\\\\.)?(\\\\w)+`, 'g' )\r\n        const globalRegex = new RegExp( `${global}\\\\.`, 'g' )\r\n\r\n        const potentialPrototypedObjectExports = file.match( fileRegex )\r\n        if ( potentialPrototypedObjectExports ) {\r\n\r\n            // Clean\r\n            potentialPrototypedObjectExports.forEach( ( value ) => {\r\n\r\n                const result = value.replace( /prototype\\.constructor\\s?=\\s?/g, '' )\r\n                                    .replace( globalRegex, '' )\r\n\r\n                exportedElements.push( result )\r\n\r\n            } )\r\n\r\n        }\r\n\r\n        return exportedElements\r\n\r\n    }\r\n\r\n    static _getExportsStatementInLibraryFile ( global, file ) {\r\n\r\n        let exportedElements = []\r\n\r\n        const fileRegex   = new RegExp( `${global}.(\\\\w+) = \\\\{`, 'g' )\r\n        const globalRegex = new RegExp( `${global}\\\\.| = \\\\{`, 'g' )\r\n\r\n        const potentialLibExports = file.match( fileRegex )\r\n        if ( potentialLibExports ) {\r\n\r\n            // Clean\r\n            potentialLibExports.forEach( ( value ) => {\r\n\r\n                const result = value.replace( globalRegex, '' )\r\n\r\n                exportedElements.push( result )\r\n\r\n            } )\r\n\r\n        }\r\n\r\n        return exportedElements\r\n\r\n    }\r\n\r\n    static _getExportsFor ( global, fileType, file, baseName, edgeCase ) {\r\n\r\n        if ( edgeCase.exportsOverride ) {\r\n            return edgeCase.exportsOverride\r\n        }\r\n\r\n        let exports = undefined\r\n\r\n        switch ( fileType ) {\r\n\r\n            case JsToEs.JavascriptType.AMD:\r\n                exports = JsToEs._getExportsStatementsInAMDFile( global, file )\r\n                break\r\n\r\n            case JsToEs.JavascriptType.CJS:\r\n                exports = JsToEs._getExportsStatementsInCJSFile( global, file )\r\n                break\r\n\r\n            case JsToEs.JavascriptType.Classic:\r\n                exports = JsToEs._getExportsStatementsInClassicFile( global, file )\r\n                break\r\n\r\n            case JsToEs.JavascriptType.Es6:\r\n                exports = JsToEs._getExportsStatementsInES6File( global, file )\r\n                break\r\n\r\n            case JsToEs.JavascriptType.Library:\r\n                exports = JsToEs._getExportsStatementInLibraryFile( global, file )\r\n                break\r\n\r\n            case JsToEs.JavascriptType.Prototype:\r\n                exports = JsToEs._getExportsStatementsInPrototypedFile( global, file )\r\n                break\r\n\r\n            case JsToEs.JavascriptType.UMD:\r\n            case JsToEs.JavascriptType.Unknown:\r\n                exports = [ baseName ]\r\n                break\r\n\r\n            default:\r\n                throw new RangeError( `Invalid switch parameter: ${fileType}` )\r\n                break\r\n\r\n        }\r\n\r\n        if ( exports.length === 0 ) {\r\n            console.error( `WARNING: ${baseName} does not contains explicit or implicit export, fallback to file name as export...` )\r\n            exports = [ baseName ]\r\n        }\r\n\r\n        if ( edgeCase.exports ) {\r\n            Array.prototype.push.apply( exports, edgeCase.exports )\r\n        }\r\n\r\n        return exports.filter( makeUnique )\r\n\r\n    }\r\n\r\n    static _formatExportStatements ( filePath, exports ) {\r\n\r\n        // Formating\r\n        let formatedExports = ''\r\n\r\n        // First check for specified exports\r\n        let specificExports = []\r\n        let regularExports  = []\r\n\r\n        exports.forEach( exports => {\r\n\r\n            ( Array.isArray( exports ) ) ? specificExports.push( exports ) : regularExports.push( exports )\r\n\r\n        } )\r\n\r\n        if ( specificExports.length === 0 && regularExports.length === 0 ) {\r\n\r\n            console.error( `WARNING: ${basename( filePath )} does not contains explicit or implicit export, fallback to file name export... It must be an Es6 file with it own exports !` )\r\n            return ''\r\n\r\n        }\r\n\r\n        // Process specific exports\r\n        for ( let i = 0, numbSpecExp = specificExports.length ; i < numbSpecExp ; i++ ) {\r\n\r\n            const exports          = specificExports[ i ]\r\n            const exportedClass    = exports[ 0 ]\r\n            const exportAction     = exports[ 1 ]\r\n            const exportComplement = exports[ 2 ]\r\n\r\n            if ( exportAction === 'from' ) {\r\n\r\n                formatedExports += `export { ${exports[ 0 ]} } from \"${exportComplement}\"\\n`\r\n\r\n            } else if ( exportAction === 'as' ) {\r\n\r\n                formatedExports += `export { ${exports[ 0 ]} as ${exportComplement} }\\n`\r\n\r\n            } else {\r\n\r\n                // Todo: export { Foo as Bar } from 'Baz'\r\n                throw new Error( 'Invalid specified export action !' )\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // Process regular exports\r\n        const numberOfExports = regularExports.length\r\n        if ( numberOfExports === 1 ) {\r\n\r\n            formatedExports += `\\nexport { ${exports[ 0 ]} }\\n`\r\n\r\n        } else if ( numberOfExports > 1 ) {\r\n\r\n            formatedExports += '\\nexport {\\n'\r\n            for ( let i = 0 ; i < numberOfExports ; i++ ) {\r\n\r\n                formatedExports += ( i === numberOfExports - 1 ) ? '\\t' + regularExports[ i ] + '\\n' : '\\t' + regularExports[ i ] + ',\\n'\r\n\r\n            }\r\n            formatedExports += '}\\n'\r\n\r\n        }\r\n\r\n        return formatedExports\r\n\r\n    }\r\n\r\n    static _getOutputFor ( filePath, outputBasePath, edgeCase ) {\r\n\r\n        if ( edgeCase.outputOverride ) {\r\n            return join( outputBasePath, edgeCase.outputOverride )\r\n        }\r\n\r\n        const specificPath = JsToEs._getSpecificPath( outputBasePath, filePath )\r\n        const outputPath   = join( outputBasePath, specificPath )\r\n        return outputPath\r\n\r\n    }\r\n\r\n    static _getSpecificPath ( base, target ) {\r\n\r\n        const baseSplits   = base.split( sep )\r\n        const targetSplits = target.split( sep )\r\n\r\n        let index          = 0\r\n        while(baseSplits[index] === targetSplits[index]) {\r\n            index++\r\n        }\r\n        index++\r\n\r\n        const specificPath = targetSplits.slice(index).join(sep)\r\n\r\n        return specificPath\r\n\r\n    }\r\n\r\n    //    static _getSpecificPath_old ( path ) {\r\n    //\r\n    //        const exampleFontsTarget = 'three\\\\examples\\\\fonts'\r\n    //        const exampleJsTarget    = 'three\\\\examples\\\\js'\r\n    //        const sourceTarget       = 'three\\\\src'\r\n    //\r\n    //        let indexOfExampleFontsTarget = path.indexOf( exampleFontsTarget )\r\n    //        let indexOfExampleJsTarget    = path.indexOf( exampleJsTarget )\r\n    //        let indexOfSourceTarget       = path.indexOf( sourceTarget )\r\n    //        let specificPath              = undefined\r\n    //\r\n    //        if ( indexOfExampleFontsTarget > -1 ) {\r\n    //\r\n    //            specificPath = 'fonts\\\\' + path.slice( indexOfExampleFontsTarget + exampleFontsTarget.length )\r\n    //\r\n    //        } else if ( indexOfExampleJsTarget > -1 ) {\r\n    //\r\n    //            specificPath = path.slice( indexOfExampleJsTarget + exampleJsTarget.length )\r\n    //\r\n    //        } else if ( indexOfSourceTarget > -1 ) {\r\n    //\r\n    //            specificPath = path.slice( indexOfSourceTarget + sourceTarget.length )\r\n    //\r\n    //        } else {\r\n    //\r\n    //            console.error( `WARNING: Unable to find specific path part for: ${path}` )\r\n    //            specificPath = ''\r\n    //\r\n    //        }\r\n    //\r\n    //        return specificPath.replace( /\\\\/g, '/' )\r\n    //\r\n    //    }\r\n\r\n    static _createFilesMap ( global, regex, filesPaths, edgeCases, outputBasePath ) {\r\n\r\n        const filesMap = {}\r\n\r\n        filesPaths.forEach( ( filePath ) => {\r\n\r\n            const fileExtension = extname( filePath )\r\n            const baseName      = basename( filePath, fileExtension )\r\n\r\n            if ( filesMap[ baseName ] ) {\r\n                console.error( `WARNING: The file ${baseName} already exist in the file map ! Is there a duplicated file ???` )\r\n                return\r\n            }\r\n\r\n            const file         = getUncommentedFileForPath( filePath )\r\n            const isJavascript = ( fileExtension === '.js' )\r\n            const edgeCase     = edgeCases[ baseName ] || {}\r\n\r\n            if ( isJavascript ) {\r\n\r\n                const fileType     = JsToEs._getFileType( file, regex )\r\n                const exports      = JsToEs._getExportsFor( global, fileType, file, baseName, edgeCase )\r\n                const imports      = JsToEs._getImportsFor( global, file, exports, edgeCase )\r\n                const replacements = JsToEs._getReplacementsFor( global, file, exports, edgeCase )\r\n                const output       = JsToEs._getOutputFor( filePath, outputBasePath, edgeCase )\r\n\r\n                filesMap[ baseName ] = {\r\n                    isJavascript,\r\n                    fileType,\r\n                    file,\r\n                    imports,\r\n                    replacements,\r\n                    exports,\r\n                    output\r\n                }\r\n\r\n            } else {\r\n\r\n                const output = JsToEs._getOutputFor( filePath, outputBasePath, edgeCase )\r\n\r\n                filesMap[ baseName ] = {\r\n                    isJavascript,\r\n                    file,\r\n                    output\r\n                }\r\n\r\n            }\r\n\r\n        } )\r\n\r\n        return filesMap\r\n\r\n    }\r\n\r\n    static _createExportMap ( filesPaths, regex, edgeCases, outputBasePath ) {\r\n\r\n        const exportsMap = {}\r\n\r\n        filesPaths.forEach( ( filePath ) => {\r\n\r\n            const fileExtension = extname( filePath )\r\n            const baseName      = basename( filePath, fileExtension )\r\n            const edgeCase      = edgeCases[ baseName ] || {}\r\n            const file          = getUncommentedFileForPath( filePath )\r\n            const fileType      = JsToEs._getFileType( file, regex )\r\n            const exports       = JsToEs._getExportsFor( global, fileType, file, baseName, edgeCase )\r\n            const outputPath    = JsToEs._getOutputFor( filePath, outputBasePath, edgeCase )\r\n\r\n            exports.forEach( ( exportedElement ) => {\r\n\r\n                // Check case where export is an array with 'from' or 'as'\r\n                if ( Array.isArray( exportedElement ) ) {\r\n                    exportedElement = exportedElement[ 0 ]\r\n                }\r\n\r\n                const exportPath = exportsMap[ exportedElement ]\r\n                if ( exportPath ) {\r\n\r\n                    const exportName = basename( exportPath )\r\n                    const fileName   = basename( filePath )\r\n\r\n                    console.error( `WARNING: Element \"${exportedElement}\" in ${fileName} is already exported by source ${exportName}! Unable to determine which source file is the right exporter !!!` )\r\n                    return\r\n\r\n                }\r\n\r\n                exportsMap[ exportedElement ] = outputPath\r\n\r\n            } )\r\n\r\n        } )\r\n\r\n        return exportsMap\r\n\r\n    }\r\n\r\n    static _processFiles ( fileMap, exportMap, banner ) {\r\n\r\n        for ( let fileName in fileMap ) {\r\n\r\n            if ( !fileMap.hasOwnProperty( fileName ) ) { continue }\r\n\r\n            const fileData = fileMap[ fileName ]\r\n\r\n            if ( fileData.isJavascript ) {\r\n\r\n                JsToEs._convertFile( banner, fileData, exportMap )\r\n\r\n            } else {\r\n\r\n                JsToEs._copyFile( banner, fileData )\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // Chainable setters\r\n    setInputs ( value ) {\r\n        this.inputs = value\r\n        return this\r\n    }\r\n\r\n    setExcludes ( value ) {\r\n        this.excludes = value\r\n        return this\r\n    }\r\n\r\n    setOutput ( value ) {\r\n        this.output = value\r\n        return this\r\n    }\r\n\r\n    setEdgeCases ( value ) {\r\n        this.edgeCases = value\r\n        return this\r\n    }\r\n\r\n    setBanner ( value ) {\r\n        this.banner = value\r\n        return this\r\n    }\r\n\r\n    setGlobal ( value ) {\r\n        this.global = value\r\n        return this\r\n    }\r\n\r\n    convert ( callback ) {\r\n\r\n        const inputs    = this._inputs\r\n        const excludes  = this._excludes\r\n        const output    = this._output\r\n        const edgeCases = this._edgeCases\r\n        const banner    = this._banner\r\n        const global    = this._global\r\n        const regex     = this._regex\r\n\r\n        if ( callback ) {\r\n\r\n            try {\r\n\r\n                const allFilesPaths       = JsToEs._getFilesPathsUnder( inputs )\r\n                const availableFilesPaths = JsToEs._excludesFilesPaths( allFilesPaths, excludes )\r\n                const jsFiles             = JsToEs._filterJavascriptFiles( availableFilesPaths )\r\n\r\n                this._fileMap   = JsToEs._createFilesMap( global, regex, availableFilesPaths, edgeCases, output )\r\n                this._exportMap = JsToEs._createExportMap( jsFiles, regex, edgeCases, output )\r\n\r\n                JsToEs._processFiles( this._fileMap, this._exportMap, banner )\r\n\r\n                callback()\r\n\r\n            } catch ( error ) {\r\n\r\n                callback( error )\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            return new Promise( ( resolve, rejects ) => {\r\n\r\n                try {\r\n\r\n                    const allFilesPaths       = JsToEs._getFilesPathsUnder( inputs )\r\n                    const availableFilesPaths = JsToEs._excludesFilesPaths( allFilesPaths, excludes )\r\n                    const jsFiles             = JsToEs._filterJavascriptFiles( availableFilesPaths )\r\n\r\n                    this._fileMap   = JsToEs._createFilesMap( global, regex, availableFilesPaths, edgeCases, output )\r\n                    this._exportMap = JsToEs._createExportMap( jsFiles, regex, edgeCases, output )\r\n\r\n                    JsToEs._processFiles( this._fileMap, this._exportMap, banner )\r\n\r\n                    resolve()\r\n\r\n                } catch ( error ) {\r\n\r\n                    rejects( error )\r\n\r\n                }\r\n\r\n            } )\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport { JsToEs }\r\n"],"names":["isString","value","isNotString","isArrayOfString","values","Array","isArray","index","numberOfValues","length","fileExistForPath","existsSync","fileNotExistForPath","getFileForPath","Error","readFileSync","getUncommentedFileForPath","replace","createFoldersTree","split","sep","reduce","parentDir","childDir","curDir","join","mkdirSync","makeUnique","array","indexOf","String","prototype","contains","target","JsToEs","options","inputs","excludes","output","edgeCases","banner","global","_exportMap","_fileMap","_regex","RegExp","_global","callback","_inputs","_excludes","_output","_edgeCases","_banner","regex","allFilesPaths","_getFilesPathsUnder","availableFilesPaths","_excludesFilesPaths","jsFiles","_filterJavascriptFiles","_createFilesMap","_createExportMap","_processFiles","error","Promise","resolve","rejects","TypeError","filePaths","files","filePath","undefined","pathIndex","numberOfPaths","results","_checkStateOf","push","apply","folder","readdirSync","forEach","name","ReferenceError","stats","statSync","isFile","isDirectory","_getFilesPathsUnderFolder","filteredFilesPath","filePathIndex","numberOfFilePaths","fileExtension","extname","_isExclude","path","isExclude","excludePattern","i","pathLength","fileName","file","es6Match","match","JavascriptType","Es6","amdMatch","AMD","cjsMatch","CJS","classicObjectMatch","Classic","prototypedObjectMatch","Prototype","libMatch","Library","Unknown","fileDatas","exportMap","outputPath","outputDir","dirname","formatedImports","_formatImportStatements","imports","formatedFile","_formatReplacementStatements","replacements","formatedExports","_formatExportStatements","exports","outputFile","writeFileSync","statements","matchs","filter","result","includes","splice","fileRegex","globalRegex","resultLength","edgeCase","importsOverride","_getAllImportsStatementIn","_getAllInheritStatementsIn","_getAllExtendsStatementIn","_getAllNewStatementIn","_getAllInstanceOfStatementIn","importerFilePath","objectNames","importStatements","importsMap","objectName","exporterFilePath","console","importerDirectoryName","exporterDirectoryName","exporterBaseName","basename","relativePath","relative","firstChar","notStartWithDot","relativeFilePath","relativeFilePathNormalized","importPath","importedObject","numberOfImports","concat","numberOfExports","exportedObject","regex2","replacement2","regex1","replacement1","unspacedFile","matchIife","matchParametrizedEndIife","matchEmptyEndIife","replacementsOverride","_getEs6ReplacementsFor","_getExportsReplacementsFor","_getIifeReplacementsFor","_getGlobalReplacementsFor","_getAutoAssignementReplacementsFor","_file","replaceIndex","numberOfReplacements","replacement","exportedElements","es6MatchedExports","splitOnFrom","exportFile","commonjsExports","potentialClassicObjectExports","potentialPrototypedObjectExports","potentialLibExports","fileType","baseName","exportsOverride","_getExportsStatementsInAMDFile","_getExportsStatementsInCJSFile","_getExportsStatementsInClassicFile","_getExportsStatementsInES6File","_getExportsStatementInLibraryFile","_getExportsStatementsInPrototypedFile","UMD","RangeError","specificExports","regularExports","numbSpecExp","exportedClass","exportAction","exportComplement","outputBasePath","outputOverride","specificPath","_getSpecificPath","base","baseSplits","targetSplits","slice","filesPaths","filesMap","isJavascript","_getFileType","_getExportsFor","_getImportsFor","_getReplacementsFor","_getOutputFor","exportsMap","exportedElement","exportPath","exportName","fileMap","hasOwnProperty","fileData","_convertFile","_copyFile","Object","freeze"],"mappings":"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"}